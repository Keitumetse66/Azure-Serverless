{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_gmail_6_name": {
            "defaultValue": "gmail-6",
            "type": "String"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "String"
        },
        "sites_ankitserverless_name": {
            "defaultValue": "ankitserverless",
            "type": "String"
        },
        "topics_speakerapp_eg_name": {
            "defaultValue": "speakerapp-eg",
            "type": "String"
        },
        "connections_azureeventgrid_name": {
            "defaultValue": "azureeventgrid",
            "type": "String"
        },
        "workflows_speakerapp_lapp_name": {
            "defaultValue": "speakerapp-lapp",
            "type": "String"
        },
        "serverfarms_AustraliaEastPlan_name": {
            "defaultValue": "AustraliaEastPlan",
            "type": "String"
        },
        "storageAccounts_speakerapp_name": {
            "defaultValue": "speakerapp",
            "type": "String"
        },
        "storageAccounts_ankitserverless_name": {
            "defaultValue": "ankitserverless",
            "type": "String"
        },
        "accounts_speakerapp_cv_name": {
            "defaultValue": "speakerapp-cv",
            "type": "String"
        },
        "databaseAccounts_speakerappdb_name": {
            "defaultValue": "speakerappdb",
            "type": "String"
        },
        "connections_cognitiveservicescomputervision_name": {
            "defaultValue": "cognitiveservicescomputervision",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "smartdetectoralertrules_failure_anomalies___ankitserverless_name": {
            "defaultValue": "failure anomalies - ankitserverless",
            "type": "String"
        },
        "components_ankitserverless_externalid": {
            "defaultValue": "/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/resourceGroups/ankitserverless/providers/microsoft.insights/components/ankitserverless",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2017-04-18",
            "name": "[parameters('accounts_speakerapp_cv_name')]",
            "location": "australiaeast",
            "sku": {
                "name": "F0"
            },
            "kind": "ComputerVision",
            "properties": {
                "customSubDomainName": "[parameters('accounts_speakerapp_cv_name')]",
                "privateEndpointConnections": [],
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "apiVersion": "2020-04-01",
            "name": "[parameters('databaseAccounts_speakerappdb_name')]",
            "location": "Australia East",
            "tags": {
                "defaultExperience": "Azure Cosmos DB for MongoDB API"
            },
            "kind": "MongoDB",
            "properties": {
                "publicNetworkAccess": "Enabled",
                "enableAutomaticFailover": false,
                "enableMultipleWriteLocations": false,
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "disableKeyBasedMetadataWriteAccess": false,
                "enableFreeTier": false,
                "enableAnalyticalStorage": false,
                "databaseAccountOfferType": "Standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Session",
                    "maxIntervalInSeconds": 5,
                    "maxStalenessPrefix": 100
                },
                "apiProperties": {
                    "serverVersion": "3.2"
                },
                "locations": [
                    {
                        "locationName": "Australia East",
                        "provisioningState": "Succeeded",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "capabilities": [],
                "ipRules": []
            }
        },
        {
            "type": "Microsoft.EventGrid/topics",
            "apiVersion": "2020-04-01-preview",
            "name": "[parameters('topics_speakerapp_eg_name')]",
            "location": "australiaeast",
            "tags": {
                "owner": "ankit"
            },
            "sku": {
                "name": "Basic"
            },
            "identity": {
                "type": "None"
            },
            "properties": {
                "inputSchema": "EventGridSchema",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2019-03-01",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": []
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_ankitserverless_name')]",
            "location": "australiaeast",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[parameters('storageAccounts_speakerapp_name')]",
            "location": "australiaeast",
            "tags": {
                "owner": "ankit"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureblob_name')]",
            "location": "australiaeast",
            "properties": {
                "displayName": "speakerapp-images",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/', parameters('connections_azureblob_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_azureeventgrid_name')]",
            "location": "australiaeast",
            "properties": {
                "displayName": "live.com#ankit_singh123@outlook.com",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/', parameters('connections_azureeventgrid_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_cognitiveservicescomputervision_name')]",
            "location": "australiaeast",
            "properties": {
                "displayName": "speakerapp-cv-con",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/', parameters('connections_cognitiveservicescomputervision_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('connections_gmail_6_name')]",
            "location": "australiaeast",
            "properties": {
                "displayName": "ankitgcplearninguser@gmail.com",
                "customParameterValues": {},
                "api": {
                    "id": "/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/gmail"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[parameters('serverfarms_AustraliaEastPlan_name')]",
            "location": "Australia East",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
            },
            "kind": "functionapp",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.alertsmanagement/smartdetectoralertrules",
            "apiVersion": "2019-06-01",
            "name": "[parameters('smartdetectoralertrules_failure_anomalies___ankitserverless_name')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
            ],
            "properties": {
                "description": "Failure Anomalies notifies you of an unusual rise in the rate of failed HTTP requests or dependency calls.",
                "state": "Enabled",
                "severity": "Sev3",
                "frequency": "PT1M",
                "detector": {
                    "id": "FailureAnomaliesDetector",
                    "name": "Failure Anomalies",
                    "description": "Detects if your application experiences an abnormal rise in the rate of HTTP requests or dependency calls that are reported as failed. The anomaly detection uses machine learning algorithms and occurs in near real time, therefore there's no need to define a frequency for this signal.<br/></br/>To help you triage and diagnose the problem, an analysis of the characteristics of the failures and related telemetry is provided with the detection. This feature works for any app, hosted in the cloud or on your own servers, that generates request or dependency telemetry - for example, if you have a worker role that calls <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackrequest\\\" target=\\\"_blank\\\">TrackRequest()</a> or <a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/application-insights/app-insights-api-custom-events-metrics#trackdependency\\\" target=\\\"_blank\\\">TrackDependency()</a>.<br/><br/><a class=\"ext-smartDetecor-link\" href=\\\"https://docs.microsoft.com/azure/azure-monitor/app/proactive-failure-diagnostics\\\" target=\\\"_blank\\\">Learn more about Failure Anomalies</a>",
                    "supportedResourceTypes": [
                        "ApplicationInsights"
                    ]
                },
                "scope": [
                    "[parameters('components_ankitserverless_externalid')]"
                ],
                "actionGroups": {
                    "groupIds": [
                        "[resourceId('microsoft.insights/actionGroups', parameters('actionGroups_Application_Insights_Smart_Detection_name'))]"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('databaseAccounts_speakerappdb_name'), '/speakerapp')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_speakerappdb_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "speakerapp"
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_ankitserverless_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_ankitserverless_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_speakerapp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_speakerapp_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_ankitserverless_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_ankitserverless_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_speakerapp_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_speakerapp_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[parameters('sites_ankitserverless_name')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AustraliaEastPlan_name'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_ankitserverless_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_ankitserverless_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_AustraliaEastPlan_name'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {},
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 1536,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/web')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "numberOfWorkers": -1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2019",
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$ankitserverless",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "cors": {
                    "allowedOrigins": [
                        "*"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/2e4bec7199e94da3b3c76ab5e7b2adf3')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2020-07-27T10:20:10.7502817Z",
                "end_time": "2020-07-27T10:20:17.2322741Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/e6c2986409824dd69981b1f20c823355')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "status": 4,
                "author_email": "N/A",
                "author": "VS Code",
                "deployer": "ZipDeploy",
                "message": "Created via a push deployment",
                "start_time": "2020-07-26T07:56:08.0296109Z",
                "end_time": "2020-07-26T07:56:16.3856698Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/createSpeaker')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/createSpeaker/",
                "script_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/createSpeaker/index.js",
                "config_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/createSpeaker/function.json",
                "href": "https://ankitserverless.azurewebsites.net/admin/functions/createSpeaker",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/deleteSpeaker')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/deleteSpeaker/",
                "script_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/deleteSpeaker/index.js",
                "config_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/deleteSpeaker/function.json",
                "href": "https://ankitserverless.azurewebsites.net/admin/functions/deleteSpeaker",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/getSpeaker')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/getSpeaker/",
                "script_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/getSpeaker/index.js",
                "config_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/getSpeaker/function.json",
                "href": "https://ankitserverless.azurewebsites.net/admin/functions/getSpeaker",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/getSpeakers')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/getSpeakers/",
                "script_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/getSpeakers/index.js",
                "config_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/getSpeakers/function.json",
                "href": "https://ankitserverless.azurewebsites.net/admin/functions/getSpeakers",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/functions",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/updateSpeaker')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "script_root_path_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/updateSpeaker/",
                "script_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/updateSpeaker/index.js",
                "config_href": "https://ankitserverless.azurewebsites.net/admin/vfs/site/wwwroot/updateSpeaker/function.json",
                "href": "https://ankitserverless.azurewebsites.net/admin/functions/updateSpeaker",
                "config": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(parameters('sites_ankitserverless_name'), '/', parameters('sites_ankitserverless_name'), '.azurewebsites.net')]",
            "location": "Australia East",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_ankitserverless_name'))]"
            ],
            "properties": {
                "siteName": "ankitserverless",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('databaseAccounts_speakerappdb_name'), '/speakerapp/speakers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('databaseAccounts_speakerappdb_name'), 'speakerapp')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_speakerappdb_name'))]"
            ],
            "properties": {
                "resource": {
                    "id": "speakers",
                    "indexes": [
                        {
                            "key": {
                                "keys": [
                                    "DocumentDBDefaultIndex"
                                ]
                            },
                            "options": {}
                        }
                    ]
                },
                "options": {}
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_speakerapp_name'), '/default/$web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_speakerapp_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_speakerapp_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_ankitserverless_name'), '/default/azure-webjobs-hosts')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_ankitserverless_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_ankitserverless_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_ankitserverless_name'), '/default/azure-webjobs-secrets')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_ankitserverless_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_ankitserverless_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_speakerapp_name'), '/default/images')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_speakerapp_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_speakerapp_name'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('storageAccounts_ankitserverless_name'), '/default/', parameters('storageAccounts_ankitserverless_name'), 'a4a213')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', parameters('storageAccounts_ankitserverless_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_ankitserverless_name'))]"
            ],
            "properties": {
                "shareQuota": 5120
            }
        },
        {
            "type": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
            "apiVersion": "2020-04-01",
            "name": "[concat(parameters('databaseAccounts_speakerappdb_name'), '/speakerapp/speakers/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections', parameters('databaseAccounts_speakerappdb_name'), 'speakerapp', 'speakers')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/mongodbDatabases', parameters('databaseAccounts_speakerappdb_name'), 'speakerapp')]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('databaseAccounts_speakerappdb_name'))]"
            ],
            "properties": {
                "resource": {
                    "throughput": 1000
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('workflows_speakerapp_lapp_name')]",
            "location": "australiaeast",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/topics', parameters('topics_speakerapp_eg_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureeventgrid_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicescomputervision_name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('connections_gmail_6_name'))]"
            ],
            "tags": {
                "owner": "ankit"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "topic": "[resourceId('Microsoft.EventGrid/topics', parameters('topics_speakerapp_eg_name'))]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "/subscriptions/@{encodeURIComponent('90311e6e-de0c-4390-abe0-79a807dc9da6')}/providers/@{encodeURIComponent('Microsoft.EventGrid.Topics')}/resource/eventSubscriptions",
                                "queries": {
                                    "x-ms-api-version": "2017-09-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_blob": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('HTTP')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "images",
                                    "name": "@{body('Parse_JSON')?['id']}.jpg",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Describe_Image": {
                            "runAfter": {
                                "HTTP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('HTTP')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['cognitiveservicescomputervision']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/vision/v2.0/describe",
                                "queries": {
                                    "format": "Image Content"
                                }
                            }
                        },
                        "For_each": {
                            "foreach": "@body('Describe_Image')?['description']?['captions']",
                            "actions": {
                                "Send_email_(V2)": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Body": "<p>@{items('For_each')?['text']}</p>",
                                            "Subject": "Image analysed for speaker: @{body('Parse_JSON')?['name']}",
                                            "To": "er.ankit.cs@gmail.com"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['gmail_2']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                }
                            },
                            "runAfter": {
                                "Describe_Image": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "@body('Parse_JSON')?['headshotUri']"
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@triggerBody()?['data']",
                                "schema": {
                                    "properties": {
                                        "headshotUri": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "integer"
                                        },
                                        "location": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "skills": {
                                            "type": "string"
                                        },
                                        "title": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/azureblob"
                            },
                            "azureeventgrid": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureeventgrid_name'))]",
                                "connectionName": "azureeventgrid",
                                "id": "/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/azureeventgrid"
                            },
                            "cognitiveservicescomputervision": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_cognitiveservicescomputervision_name'))]",
                                "connectionName": "cognitiveservicescomputervision",
                                "id": "/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/cognitiveservicescomputervision"
                            },
                            "gmail_2": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_gmail_6_name'))]",
                                "connectionName": "gmail-6",
                                "id": "/subscriptions/90311e6e-de0c-4390-abe0-79a807dc9da6/providers/Microsoft.Web/locations/australiaeast/managedApis/gmail"
                            }
                        }
                    }
                }
            }
        }
    ]
}